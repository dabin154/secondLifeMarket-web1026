<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
       ">

<!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!--登录页的url -->
        <property name="loginUrl" value="/" />
        <!--未认证的跳转页面 -->
        <property name="unauthorizedUrl" value="/WEB-INF/pages/403.jsp" />
        <!--过滤器链authc:指的是该路径下只有经过认证才能访问该路径
                    anon:值不经过认证可以访问该路径
                    过滤器连是有顺序的，从下往上匹配，匹配到之后返回、
                    “同时具备admin和superadmin角色的用户可以访问所有权限”
                    /delete路径只有同时具备user：delete和user：select权限的用户才可访问-->
        <property name="filterChainDefinitions">
            <value>
                /login = anon
                /registerPage = anon
                /checklogin = anon
                /* = roles["admin","superadmin"]
                /delete = perms["user:delete","user:select"]
                /* = authc
            </value>
        </property>
    </bean>

    <!-- Realm实现-->
    <bean id="userRealm" class="com.secondLifeMarket.general.admin.utils.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm" />
    </bean>

    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
    </bean>

    <!-- 凭证匹配器,加密管理器对象-->
    <bean id="credentialsMatcher" class="com.secondLifeMarket.general.admin.utils.RetryLimitHashedCredentialsMatcher">
       <constructor-arg ref="cacheManager" />
        <!-- 加密算法-->
        <property name="hashAlgorithmName" value="md5" />
        <!-- 加密次数  -->
        <property name="hashIterations" value="2" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>