<?xml version = "1.0" encoding = "utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	 	http://www.springframework.org/schema/mvc
	 	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	 	http://www.springframework.org/schema/context
	 	http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!--json处理-->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
    	</mvc:message-converters>
   </mvc:annotation-driven>

	<context:component-scan base-package="com.secondLifeMarket.general.admin.webapp.controller"/>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
         <property name="maxUploadSize"><value>100000000000</value></property> 
	     <property name="defaultEncoding"><value>UTF-8</value></property>
	</bean>
	
	<!-- 对静态资源文件的访问-->   
	<mvc:resources location="/resources/" mapping="/resources/**" />	
<!-- <mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
 -->

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	<!-- 文件上传转换器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 启用shrio 控制器授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>

	<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求
	<mvc:interceptors>
    	<bean class="com.secondLifeMarket.general.admin.util.framework.GeneralIntercepter"/>  
	</mvc:interceptors> -->
 
</beans>